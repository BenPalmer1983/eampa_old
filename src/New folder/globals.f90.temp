Module globals

! --------------------------------------------------------------!
! General subroutines and functions
! Ben Palmer, University of Birmingham
! --------------------------------------------------------------!

! Declare all global variables

! ----------------------------------------
! Updated: 12th Aug 2014
! ----------------------------------------

! Setup Modules
  Use kinds
  Use msubs
  Use general
! Force declaration of all variables
  Implicit None
! Initialise Subroutine Variable
  Character(len=64) :: compileLine
  Real(kind=DoubleReal) :: programStartTime, programEndTime
  Real(kind=DoubleReal) :: timeStart, timeEnd, timeDuration
  Real(kind=DoubleReal) :: globalsTimeStart, globalsTimeEnd
  Real(kind=DoubleReal), Dimension(1:100) :: cpuTime
  Character(Len=64), Dimension(1:100) :: cpuTimeLabels
  Character(len=255) :: currentWorkingDirectory
  Character(len=255) :: outputFile
  Character(len=255) :: outputFileEnergies
  Character(len=255) :: outputFileForces
  Character(len=512), Dimension(1:100) :: fileCleanupList
  Character(len=255) :: outputDirectory
  Character(len=255) :: tempDirectory
! MPI Global Variables
  Integer(kind=StandardInteger) :: mpiProcessCount, mpiProcessID
! System Variables
  Real(kind=DoubleReal) :: largeArraySize
  Integer(kind=StandardInteger), Dimension(1:1024,1:10) :: processMap
! Parameters
  Integer(kind=StandardInteger), Parameter :: maxConfigs = 1024

! -----------------------
! Default variables
  Character(len=4), Dimension(1:10) :: eamFunctionTypes
! Declare variables - debug options
  Integer(kind=StandardInteger) :: printToTerminal
! Declare variables - run options
  Character(len=4) :: eampaRunType
  Integer(kind=StandardInteger) :: optionReadConf
  Integer(kind=StandardInteger) :: optionMakeConf
  Integer(kind=StandardInteger) :: optionReadEAM
  Integer(kind=StandardInteger) :: optionRunPrep
  Integer(kind=StandardInteger) :: optionNeighbourList
  Integer(kind=StandardInteger) :: optionCalcEnergies
  Integer(kind=StandardInteger) :: optionEval
  Integer(kind=StandardInteger) :: optionEvalFull
  Integer(kind=StandardInteger) :: optionOptimise
  Integer(kind=StandardInteger) :: optionTestEAM
  Integer(kind=StandardInteger) :: optionRunPWBatch
  Integer(kind=StandardInteger) :: optionOutput
! Input File - User Input
  Character(len=255) :: inputFilePath
  Character(len=255) :: inputFilePathT
! MPI Options
  Integer(kind=StandardInteger) :: mpiEnergy
! EAM Details - User Input
  Character(len=255) :: eamFilePath
  Character(len=255) :: eamFilePathT
  Character(len=255) :: eamNodesFilePath
  Character(len=64) :: eamSaveFile
  Integer(kind=StandardInteger) :: eamInterpPoints
  Real(kind=DoubleReal), Dimension(1:6) :: zblHardCore                             ! 1 Pair ZBL end, 2 Pair Spline End, 3 Dens Value, 4 De
  Integer(kind=StandardInteger), Dimension(1:50) :: splineNodeCount
  Integer(kind=StandardInteger) :: splineTotalNodes
  Integer(kind=StandardInteger) :: eamForceSpline
  Integer(kind=StandardInteger) :: eamForceZBL
  Character(len=2), Dimension(1:10) :: eamMakeAlloy
  Integer(kind=StandardInteger) :: eamFileType
! Config Details - User Input
  Real(kind=DoubleReal), Dimension(1:3,1:3) :: globalConfigUnitVector
  Character(len=255) :: configFilePath
  Character(len=255) :: configFilePathT
  Character(len=255) :: saveConfigFile
  Character(len=255) :: saveExpConfigFile
! DFT Settings
  Character(len=2), Dimension(1:300) :: dftElement
  Real(kind=DoubleReal), Dimension(1:300) :: dftOptEnergy
  Real(kind=DoubleReal), Dimension(1:300) :: dftCohEnergy
! Neighbour List Settings
  Real(kind=DoubleReal) :: nlCutoff       ! Standard calculations
  Real(kind=DoubleReal) :: nlTestCutoff   ! Test calculations
! Calculation details
  Character(len=8) :: calcEqVol
  Character(len=3) :: refineEqVol
  Integer(kind=StandardInteger) :: saveForcesToFile
  Integer(kind=StandardInteger) :: saveNLToFile
! Optimise options
  Real(kind=DoubleReal), Dimension(1:10) :: varyNodeOptions
  Integer(kind=StandardInteger) :: optLoops
  Integer(kind=StandardInteger) :: reduceNodes
  Integer(kind=StandardInteger) :: embeRescale
! RSS calculation options
  Real(kind=DoubleReal), Dimension(1:20) :: rssWeighting
  Real(kind=DoubleReal), Dimension(1:1024) :: configWeighting
! PW Batch Files - User Input
  Character(len=16) :: pwbRunType
  Character(len=255) :: pwbConfigFilePath                                          ! 255Bytes
  Character(len=255) :: pwbConfigFilePathT                                         ! 255Bytes
  Character(len=255) :: pwbBatchDir
  Integer(kind=StandardInteger) :: pwbVarianceSwitch
  Character(len=4) :: pwbVarianceType
  Real(kind=DoubleReal) :: pwbVarianceMax
  Real(kind=DoubleReal) :: pwbVarianceSigma
  Integer(kind=StandardInteger) :: pwbInterstitialAtom
  Character(len=16), Dimension(1:3) :: pwbInterstitialDetails

! -----------------------
! Read EAM File + Read Configuration File    < 20MB
  Character(len=2), Dimension(1:300) :: elements                                   ! 0.6KB
  Integer(kind=StandardInteger) :: elementsCount
  Integer(kind=StandardInteger), Dimension(1:300) :: elementsCharge                ! 1.2KB
! Read EAM File
  Integer(kind=StandardInteger) :: eamFunctionCount, eamPairCount, eamDensCount, eamEmbeCount
  Integer(kind=StandardInteger) :: eamDdenCount, eamSdenCount, eamDembCount, eamSembCount
  Integer(kind=StandardInteger) :: eamType                                         ! 4bit        1=EAM, 2=2BMEAM
  Integer(kind=StandardInteger), Dimension(1:50,1:6) :: eamKey                     ! 1.2KB       1 atomA, 2 atomB, 3 function/al type, 4 func start, 5 func length, 6 func end
  Real(kind=DoubleReal), Dimension(1:100000,1:4) :: eamData                        ! 3.2MB       1 x, 2 y(x), 3 y'(x), 4 y''(x)
  Integer(kind=StandardInteger), Dimension(1:50,1:6) :: splineNodesKey
  Real(kind=DoubleReal), Dimension(1:10000,1:6) :: splineNodesData
  Real(kind=DoubleReal), Dimension(1:10000,1:2) :: splineNodesResponse
  Integer(kind=StandardInteger), Dimension(1:50,1:6) :: eamKeyInput
  Real(kind=DoubleReal), Dimension(1:100000,1:4) :: eamDataInput
  Integer(kind=StandardInteger), Dimension(1:50,1:6) :: eamKeyOpt
  Real(kind=DoubleReal), Dimension(1:100000,1:4) :: eamDataOpt
  Integer(kind=StandardInteger), Dimension(1:50,1:6) :: splineNodesKeyOpt
  Real(kind=DoubleReal), Dimension(1:10000,1:6) :: splineNodesDataOpt
! Integer(kind=StandardInteger), Dimension(1:50,1:6) :: splineNodesKeyIn
! Real(kind=DoubleReal), Dimension(1:10000,1:4) :: splineNodesDataIn
! Read Configuration File
  Integer(kind=StandardInteger) :: configCount, configCountT, configCountRI                      ! 4bit
  Integer(kind=StandardInteger), Dimension(1:1024,1:20) :: configurationsI         ! 41KB        1 xcopy, 2 ycopy, 3 zcopy, 4 forces,
  Real(kind=DoubleReal), Dimension(1:1024,1:30) :: configurationsR                 ! 164KB       1 lp, 2-10 xx-zz, 11 rc, 12 BM   21-29 configUnitVector
! Input coords and forces
  Integer(kind=StandardInteger) :: coordCount                                      ! 4bit
  Integer(kind=StandardInteger), Dimension(1:1024,1:3) :: configurationCoordsKey   ! 13KB        1 start, 2 length, 3 end
  Integer(kind=StandardInteger), Dimension(1:50000,1:1) :: configurationCoordsI   !             1 atomID
  Real(kind=DoubleReal), Dimension(1:50000,1:3) :: configurationCoordsR           !             1 x, 2 y, 3 z
  Real(kind=DoubleReal), Dimension(1:50000,1:3) :: configurationForcesR           !             1 fx, 2 fy, 3 fz
! Generated/expanded coords and forces
  Integer(kind=StandardInteger) :: coordCountG                                     ! 4bit
  Integer(kind=StandardInteger), Dimension(1:1024,1:3) :: configurationCoordsKeyG  ! 13KB        1 start, 2 length, 3 end
  Integer(kind=StandardInteger), Dimension(1:100000,1:1) :: configurationCoordsIG  !          1 atomID
  Real(kind=DoubleReal), Dimension(1:100000,1:3) :: configurationCoordsRG          !       1 x, 2 y, 3 z
  Real(kind=DoubleReal), Dimension(1:1024) :: configVolume
  Real(kind=DoubleReal), Dimension(1:1024) :: configVolumeOpt
! Configuration Reference/Calculated Values
  Real(kind=DoubleReal), Dimension(1:1024,1:20) :: configRef                       !             1 Energy PA, 2 EqVol
  Real(kind=DoubleReal), Dimension(1:1024,1:20) :: configCalc                      !             1 Energy, 2 EqVol    (maybe)
  Real(kind=DoubleReal), Dimension(1:100000,1:3) :: configRefForces                !       1 fx, 2 fy, 3 fz
  Real(kind=DoubleReal), Dimension(1:100000,1:3) :: configCalcForces
  Real(kind=DoubleReal), Dimension(1:1024,1:9) :: configRefStresses
  Real(kind=DoubleReal), Dimension(1:1024,1:9) :: configCalcStresses
  Real(kind=DoubleReal), Dimension(1:1024) :: configRefEnergies
  Real(kind=DoubleReal), Dimension(1:1024) :: configCalcEnergies
  Real(kind=DoubleReal), Dimension(1:1024) :: configRefEV                          ! Equilibrium volume
  Real(kind=DoubleReal), Dimension(1:1024) :: configCalcEV
  Real(kind=DoubleReal), Dimension(1:1024) :: configCalcEE
  Real(kind=DoubleReal), Dimension(1:1024) :: configCalcEL
  Real(kind=DoubleReal), Dimension(1:1024) :: configRefBM
  Real(kind=DoubleReal), Dimension(1:1024) :: configCalcBM
  Real(kind=DoubleReal), Dimension(1:1024,1:10) :: configRSS                       ! 1 energy, 2 forces, 3 stresses
  Real(kind=DoubleReal), Dimension(1:20) :: testConfigRSS                          ! 1FccALat,2FccEMin,3FccBM,4FccEoS,5FccC11,6FccC12,7FccC44,8BccALat,9BccEMin,10BccBM,11BccEoS,12BccC11,13BccC12,14BccC44
  Real(kind=DoubleReal) :: totalRSS, optimumRSS, startRSS, configTotalRSS
! Optimisation
  Real(kind=DoubleReal) :: nodeVariationAmount
  Real(kind=DoubleReal) :: saTemp, saMaxVariation
  Integer(kind=StandardInteger) :: saTempLoops, saVarLoops
  Integer(kind=StandardInteger) :: varyFixedNodes
  Integer(kind=StandardInteger) :: jumbleNodesOpt
  Integer(kind=StandardInteger) :: forceEmbeFitOpt
! DFT Config
  Character(len=8), Dimension(1:10,1:2) :: dftReplaceLabel

! ----------------------------------------------
! Neighbour List
! ----------------------------------------------
  Integer(kind=StandardInteger), Dimension(1:800000) :: nlUniqueKeys               ! 2.0MB
  Integer(kind=StandardInteger) :: neighbourListCount
  Integer(kind=StandardInteger), Dimension(1:1024,1:3) :: neighbourListKey
  Real(kind=DoubleReal), Dimension(1:1024,1:1) :: neighbourListKeyR
  Integer(kind=StandardInteger), Dimension(1:800000,1:6) :: neighbourListI         ! 12.0MB
  Real(kind=DoubleReal), Dimension(1:800000) :: neighbourListR                     ! 4.0MB
  Real(kind=DoubleReal), Dimension(1:800000,12) :: neighbourListCoords             ! 48.0MB
  Integer(kind=StandardInteger), Dimension(1:2000) :: atomSeparationSpread
! Temporary NL arrays
  Integer(kind=StandardInteger), Dimension(1:800000,1:6) :: neighbourListIT         ! 16.0MB
  Real(kind=DoubleReal), Dimension(1:800000) :: neighbourListRT                     ! 5.0MB
  Real(kind=DoubleReal), Dimension(1:800000,12) :: neighbourListCoordsT             ! 60.0MB

! ----------------------------------------------
! Calculations
! ----------------------------------------------
  Real(kind=DoubleReal), Dimension(1:50000) :: calculationDensity
  Real(kind=DoubleReal), Dimension(1:100000) :: pairForce

! ----------------------------------------------
! Results
! ----------------------------------------------
  Real(kind=DoubleReal), Dimension(1:1024) :: calcConfigEnergies
  Real(kind=DoubleReal), Dimension(1:200000,1:3) :: calcConfigForces

! ----------------------------------------------
! EAM Testing
! ----------------------------------------------
  Real(kind=DoubleReal), Dimension(1:12) :: fccReferenceValues, bccReferenceValues
  Real(kind=DoubleReal), Dimension(1:12) :: fccCalcValues, bccCalcValues
  Real(kind=DoubleReal) :: fccALat, fccEMin, fccVolMin, fccBM, fccBMP
  Real(kind=DoubleReal) :: bccALat, bccEMin, bccVolMin, bccBM, bccBMP
  Real(kind=DoubleReal), Dimension(1:10) :: fccEC, bccEC
  Real(kind=DoubleReal) :: fccALatMurn, fccEMinMurn, fccVolMinMurn, fccBMMurn, fccBMPMurn
  Real(kind=DoubleReal) :: bccALatMurn, bccEMinMurn, bccVolMinMurn, bccBMMurn, bccBMPMurn
  Real(kind=DoubleReal) :: fccALatBirchMurn, fccEMinBirchMurn, fccVolMinBirchMurn, fccBMBirchMurn, fccBMPBirchMurn
  Real(kind=DoubleReal) :: bccALatBirchMurn, bccEMinBirchMurn, bccVolMinBirchMurn, bccBMBirchMurn, bccBMPBirchMurn
  Real(kind=DoubleReal), Dimension(1:10) :: fccECMurn, bccECMurn
  Integer(kind=StandardInteger) :: printTestingData, outputTestingData
  Real(kind=DoubleReal) :: testingRSS, eosFitRSS
  Integer(kind=StandardInteger) :: testingFitChoice  ! 1 Murn, 2 BirchMurn
  Integer(kind=StandardInteger) :: eosFitRSSOption  ! Include RSS of EAM model to ref EoS
  Real(kind=DoubleReal) :: testingALatRSS, testingEMinRSS
  Real(kind=DoubleReal) :: testingBMRSS, testingECRSS

! ----------------------------------------------
! PWscf Batch File Globals
! ----------------------------------------------
  Real(kind=DoubleReal), Dimension(1:3,1:3) :: pwbUnitVector, pwbUnitVectorWorking
  Real(kind=DoubleReal) :: pwbLatticeParameter
  Integer(kind=StandardInteger) :: pwbXCopy, pwbYCopy, pwbZCopy
  Real(kind=DoubleReal) :: pwbXd, pwbYd, pwbZd
  Character(len=8), Dimension(1:1024)   :: pwbAtomLabelsInput
  Real(kind=DoubleReal), Dimension(1:1024,1:3)   :: pwbAtomCoordsInput
  Character(len=8), Dimension(1:4096)   :: pwbAtomLabels, pwbAtomLabelsWorking                  ! 2x33KB
  Real(kind=DoubleReal), Dimension(1:4096,1:3)   :: pwbAtomCoords, pwbAtomCoordsWorking        ! 2x99KB
  Character(len=8), Dimension(1:128)   :: pwbAtomicSpeciesL
  Character(len=64), Dimension(1:128)   :: pwbAtomicSpeciesPP
  Real(kind=DoubleReal), Dimension(1:128)   :: pwbAtomicSpeciesDP
! PWscf options
  Character(len=64) :: pwbRestartMode, pwbCalculation, pwbOutDir, pwbPseudoDir, pwbPrefix,&
  pwbDiskIO, pwbOccupations, pwbSmearing, &
  pwbDiagonalization, pwbMixingMode, pwbIonDynamics, pwbCellDynamics, &
  pwbKpoints
  Character(len=6) ::  pwbTprnfor, pwbTstress
  Real(kind=DoubleReal) :: pwbEtotConvThr, pwbForcConvThr, pwbDegauss, pwbMixingBeta, &
  pwbConvThr, pwbPress, pwbCellFactor
  Integer(kind=StandardInteger) :: pwbNstep, pwbIbrav, pwbNat, pwbNtyp, pwbEcutwfc, pwbEcutrho
  Integer(kind=StandardInteger) :: pwbNbnd, pwbFixedAtoms
! PWscf working variables
  Integer(kind=StandardInteger) :: pwbNatWorking, pwbNtypWorking

! ----------------------------------------------
! Input Config Neighbour List
! ----------------------------------------------
  Integer(kind=StandardInteger) :: neighbourListCountInput
  Integer(kind=StandardInteger), Dimension(1:1024,1:3) :: neighbourListKeyInput
  Real(kind=DoubleReal), Dimension(1:1024,1:1) :: neighbourListKeyRInput
  Integer(kind=StandardInteger), Dimension(1:800000,1:6) :: neighbourListIInput
  Real(kind=DoubleReal), Dimension(1:800000) :: neighbourListRInput
  Real(kind=DoubleReal), Dimension(1:800000,12) :: neighbourListCoordsInput
  Integer(kind=StandardInteger) :: configCountInput
  Integer(kind=StandardInteger), Dimension(1:1024,1:20) :: configurationsIInput
  Real(kind=DoubleReal), Dimension(1:1024,1:30) :: configurationsRInput
  Integer(kind=StandardInteger) :: coordCountInput
  Integer(kind=StandardInteger), Dimension(1:1024,1:3) :: configurationCoordsKeyInput
  Integer(kind=StandardInteger), Dimension(1:50000,1:1) :: configurationCoordsIInput
  Real(kind=DoubleReal), Dimension(1:50000,1:3) :: configurationCoordsRInput
  Real(kind=DoubleReal), Dimension(1:50000,1:3) :: configurationForcesRInput
  Integer(kind=StandardInteger) :: coordCountGInput
  Integer(kind=StandardInteger), Dimension(1:1024,1:3) :: configurationCoordsKeyGInput
  Integer(kind=StandardInteger), Dimension(1:100000,1:1) :: configurationCoordsIGInput
  Real(kind=DoubleReal), Dimension(1:100000,1:3) :: configurationCoordsRGInput
  Real(kind=DoubleReal), Dimension(1:1024) :: configVolumeInput
  Real(kind=DoubleReal), Dimension(1:1024,1:20) :: configRefInput
  Real(kind=DoubleReal), Dimension(1:100000,1:3) :: configRefForcesInput
  Real(kind=DoubleReal), Dimension(1:1024,1:9) :: configRefStressesInput
  Real(kind=DoubleReal), Dimension(1:1024) :: configRefEnergiesInput
  Real(kind=DoubleReal), Dimension(1:1024) :: configRefEVInput
  Real(kind=DoubleReal), Dimension(1:1024) :: configRefBMInput

  Private
! -----------------------
! Subroutine
  Public :: initGlobals
  Public :: storeTime
! Initialise subroutine variables
  Public :: compileLine
  Public :: programStartTime, programEndTime
  Public :: timeStart, timeEnd, timeDuration
  Public :: cpuTime, cpuTimeLabels
  Public :: globalsTimeStart, globalsTimeEnd
  Public :: outputFile
  Public :: outputFileEnergies
  Public :: outputFileForces
  Public :: currentWorkingDirectory
  Public :: fileCleanupList
  Public :: outputDirectory
  Public :: tempDirectory
! MPI Variables
  Public :: mpiProcessCount
  Public :: mpiProcessID
! System Variables
  Public :: largeArraySize
  Public :: processMap
  Public :: maxConfigs
! Default variables
  Public :: eamFunctionTypes
! Set defaults - debug options
  Public :: printToTerminal
! Public Variables - run options
  Public :: eampaRunType
  Public :: optionReadEAM
  Public :: optionReadConf
  Public :: optionMakeConf
  Public :: optionRunPrep
  Public :: optionNeighbourList
  Public :: optionCalcEnergies
  Public :: optionEval
  Public :: optionEvalFull
  Public :: optionTestEAM
  Public :: optionOptimise
  Public :: optionRunPWBatch
  Public :: optionOutput
! Input File - User Input
  Public :: inputFilePath, inputFilePathT
! MPI Options
  Public :: mpiEnergy
! EAM Details - User Input
  Public :: eamFilePath, eamFilePathT
  Public :: eamNodesFilePath
  Public :: eamSaveFile
  Public :: eamInterpPoints
  Public :: zblHardCore
  Public :: splineNodeCount
  Public :: splineTotalNodes
  Public :: eamForceSpline
  Public :: eamForceZBL
  Public :: eamMakeAlloy
  Public :: eamFileType
! Config Details - User Input
  Public :: globalConfigUnitVector
  Public :: configFilePath, configFilePathT
  Public :: saveConfigFile, saveExpConfigFile
! DFT Settings
  Public :: dftElement
  Public :: dftOptEnergy
  Public :: dftCohEnergy
! Neighbour List Settings
  Public :: nlCutoff
  Public :: nlTestCutoff
! Calculation details
  Public :: calcEqVol
  Public :: refineEqVol
  Public :: saveForcesToFile, saveNLToFile
! Optimise options
  Public :: varyNodeOptions
  Public :: optLoops
  Public :: reduceNodes
  Public :: embeRescale
  Public :: forceEmbeFitOpt
! RSS calculation options
  Public :: rssWeighting
  Public :: configWeighting
! PW Batch Files - User Input
  Public :: pwbRunType
  Public :: pwbConfigFilePath, pwbConfigFilePathT
  Public :: pwbBatchDir
  Public :: pwbVarianceSwitch
  Public :: pwbVarianceType
  Public :: pwbVarianceMax
  Public :: pwbVarianceSigma
  Public :: pwbInterstitialAtom
  Public :: pwbInterstitialDetails
! -----------------------
! Read EAM File + Read Configuration File
  Public :: elements
  Public :: elementsCount
  Public :: elementsCharge
! Read EAM File
  Public :: eamFunctionCount, eamPairCount, eamDensCount, eamEmbeCount
  Public :: eamDdenCount, eamSdenCount, eamDembCount, eamSembCount
  Public :: eamType
  Public :: eamKey
  Public :: eamData
  Public :: splineNodesData
  Public :: splineNodesKey
  Public :: splineNodesResponse
  Public :: eamKeyInput
  Public :: eamDataInput
  Public :: eamKeyOpt
  Public :: eamDataOpt
  Public :: splineNodesKeyOpt
  Public :: splineNodesDataOpt
! Read Configuration File
  Public :: configCount, configCountT, configCountRI
  Public :: configurationsI, configurationsR
  Public :: coordCount
  Public :: configurationCoordsKey, configurationCoordsI
  Public :: configurationCoordsR, configurationForcesR
  Public :: coordCountG
  Public :: configurationCoordsKeyG, configurationCoordsIG
  Public :: configurationCoordsRG
  Public :: configVolume
  Public :: configVolumeOpt
! Configuration Reference/Calculated Values
  Public :: configRef
  Public :: configCalc
  Public :: configRefForces
  Public :: configCalcForces
  Public :: configRefStresses
  Public :: configCalcStresses
  Public :: configRefEnergies
  Public :: configCalcEnergies
  Public :: configRefEV
  Public :: configCalcEV
  Public :: configCalcEE
  Public :: configCalcEL
  Public :: configRefBM
  Public :: configCalcBM
  Public :: configRSS, configTotalRSS, testConfigRSS
  Public :: totalRSS, optimumRSS, startRSS
! Optimisation
  Public :: nodeVariationAmount
  Public :: saTemp
  Public :: saTempLoops, saVarLoops, saMaxVariation
  Public :: varyFixedNodes
  Public :: jumbleNodesOpt
! Neighbour List
  Public :: nlUniqueKeys
  Public :: neighbourListCount
  Public :: neighbourListKey
  Public :: neighbourListKeyR
  Public :: neighbourListI
  Public :: neighbourListR
  Public :: neighbourListCoords
  Public :: atomSeparationSpread
! Temporary NL arrays
  Public :: neighbourListIT
  Public :: neighbourListRT
  Public :: neighbourListCoordsT
! Calculations
  Public :: calculationDensity
  Public :: pairForce
! Results
  Public :: calcConfigEnergies
  Public :: calcConfigForces
! EAM Testing
  Public :: fccReferenceValues, bccReferenceValues
  Public :: fccCalcValues, bccCalcValues
  Public :: fccALat, fccEMin, fccVolMin, fccBM, fccBMP
  Public :: bccALat, bccEMin, bccVolMin, bccBM, bccBMP
  Public :: fccEC, bccEC
  Public :: fccALatMurn, fccEMinMurn, fccVolMinMurn, fccBMMurn, fccBMPMurn
  Public :: bccALatMurn, bccEMinMurn, bccVolMinMurn, bccBMMurn, bccBMPMurn
  Public :: fccALatBirchMurn, fccEMinBirchMurn, fccVolMinBirchMurn, fccBMBirchMurn, fccBMPBirchMurn
  Public :: bccALatBirchMurn, bccEMinBirchMurn, bccVolMinBirchMurn, bccBMBirchMurn, bccBMPBirchMurn
  Public :: fccECMurn, bccECMurn
  Public :: printTestingData, outputTestingData
  Public :: testingRSS
  Public :: testingFitChoice
  Public :: eosFitRSS
  Public :: eosFitRSSOption
  Public :: testingALatRSS, testingEMinRSS
  Public :: testingBMRSS, testingECRSS
! DFT Config
  Public :: dftReplaceLabel

! ----------------------------------------------
! PWscf Batch File Globals
  Public :: pwbUnitVector, pwbUnitVectorWorking
  Public :: pwbLatticeParameter
  Public :: pwbXCopy, pwbYCopy, pwbZCopy
  Public :: pwbXd, pwbYd, pwbZd
  Public :: pwbAtomLabelsInput
  Public :: pwbAtomCoordsInput
  Public :: pwbAtomLabels, pwbAtomLabelsWorking
  Public :: pwbAtomCoords, pwbAtomCoordsWorking
  Public :: pwbAtomicSpeciesL, pwbAtomicSpeciesPP
  Public :: pwbAtomicSpeciesDP
! PWscf options
  Public :: pwbRestartMode, pwbCalculation, pwbOutDir, pwbPseudoDir, pwbPrefix,&
  pwbDiskIO, pwbOccupations, pwbSmearing, &
  pwbDiagonalization, pwbMixingMode, pwbIonDynamics, pwbCellDynamics, &
  pwbKpoints
  Public :: pwbTprnfor, pwbTstress
  Public :: pwbEtotConvThr, pwbForcConvThr, pwbDegauss, pwbMixingBeta, &
  pwbConvThr, pwbPress, pwbCellFactor
  Public :: pwbNstep, pwbIbrav, pwbNat, pwbNtyp, pwbEcutwfc, pwbEcutrho
  Public :: pwbNbnd, pwbFixedAtoms
! PWscf working variables
  Public :: pwbNatWorking, pwbNtypWorking

! Input Config Neighbour List
  Public :: neighbourListCountInput
  Public :: neighbourListKeyInput
  Public :: neighbourListKeyRInput
  Public :: neighbourListIInput
  Public :: neighbourListRInput
  Public :: neighbourListCoordsInput
  Public :: configCountInput
  Public :: configurationsIInput
  Public :: configurationsRInput
  Public :: coordCountInput
  Public :: configurationCoordsKeyInput
  Public :: configurationCoordsIInput
  Public :: configurationCoordsRInput
  Public :: configurationForcesRInput
  Public :: coordCountGInput
  Public :: configurationCoordsKeyGInput
  Public :: configurationCoordsIGInput
  Public :: configurationCoordsRGInput
  Public :: configVolumeInput
  Public :: configRefInput
  Public :: configRefForcesInput
  Public :: configRefStressesInput
  Public :: configRefEnergiesInput
  Public :: configRefEVInput
  Public :: configRefBMInput

  Contains

! Init global variables
  Subroutine initGlobals()
    Implicit None
! Global Init Start time
    Call cpu_time(globalsTimeStart)
! Initialise Subroutine Variable
    compileLine = "17:47:23  21/11/2014"
